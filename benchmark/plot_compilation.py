import argparse
import pathlib

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import scipy
from plot_utils import (
    plot_distribution,
    plot_relation,
)

from pandas import DataFrame

parser = argparse.ArgumentParser(
    description="""
        Generates compilation artifacts from raw benchmark data.
     """
)
parser.add_argument(
    "input",
    type=pathlib.Path,
    help="""
        Path to the benchmark data, as generated by the replay's
        bench-compilation command.
    """,
)
parser.add_argument(
    "output",
    type=pathlib.Path,
    help="""
        Path to the output artifacts directory. For each artifact, a sidecar
        metadata file is saved.
    """,
)
parser.add_argument(
    "--show",
    action="store_true",
    help="""
        Displays the generated plots.
    """,
)
args = parser.parse_args()


args.output.mkdir(parents=True, exist_ok=True)

df: DataFrame = pd.read_csv(args.input)

# Convert to better units.
df["native_time_s"] = df["native_time_ns"] / 1e9
df["casm_time_s"] = df["casm_time_ns"] / 1e9
df["object_size_kb"] = df["object_size_bytes"] / 2**10

plot_distribution(
    args.output,
    df["native_time_s"],
    "Time (s)",
    "Compilation Time Distribution",
    "Calculates the distribution of the contract compilation time.",
)

plot_distribution(
    args.output,
    df["object_size_kb"],
    "Size (KiB)",
    "Compiled Contract Size Distribution",
    "Calculates the distribution of the compiled contract size.",
)

# Remove outliers
zscores = np.abs(scipy.stats.zscore(df[["native_time_ns", "object_size_bytes"]]))
df: DataFrame = df[(zscores < 3).all(axis=1)]  # type: ignore

plot_relation(
    args.output,
    df["sierra_statement_count"],
    df["object_size_kb"],
    "Sierra Statement Count",
    "Compiled Contract Size (KiB)",
    "Sierra Size vs. Compiled Contract Size",
    "Correlates the Sierra size with the compiled contract size.",
)

plot_relation(
    args.output,
    df["sierra_statement_count"],
    df["native_time_s"],
    "Sierra Statement Count",
    "Compilation Time (s)",
    "Sierra Size vs. Compilation Time",
    "Correlates the Sierra size with the compilation time.",
)

plot_relation(
    args.output,
    df["casm_time_s"],
    df["native_time_s"],
    "CASM Compilation Time (s)",
    "Native Compilation Time (s)",
    "CASM Compilation Time vs. Native Compilation Time",
    "Correlates the CASM compilation time with the Native compilation time.",
)

if args.show:
    plt.show()
