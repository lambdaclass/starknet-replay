name: CI

on:
  push:
    branches: [main]
  pull_request:
  merge_group:
    types: [checks_requested]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  check:
    name: clippy
    runs-on: ubuntu-latest
    env:
      MLIR_SYS_190_PREFIX: /usr/lib/llvm-19/
      LLVM_SYS_191_PREFIX: /usr/lib/llvm-19/
      TABLEGEN_190_PREFIX: /usr/lib/llvm-19/
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.80.0
        with:
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: Add LLVM Debian repository
        uses: myci-actions/add-deb-repo@10
        with:
          repo: deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-19 main
          repo-name: llvm-repo
          keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key
      - name: Install LLVM
        run: sudo apt-get install llvm-19 llvm-19-dev llvm-19-runtime clang-19 clang-tools-19 lld-19 libpolly-19-dev libmlir-19-dev mlir-19-tools
      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  format:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.80.0
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check
      - name: Find Comment
        continue-on-error: true
        if: success() || failure()
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: thiscommentistofindthisformatcomment
      - name: Create or update comment
        continue-on-error: true
        if: failure()
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ❌ Code is not formatted! Please run `cargo format` and push the changes.

            <!-- thiscommentistofindthisformatcomment -->
          edit-mode: replace
      - name: Create or update comment
        continue-on-error: true
        if: ${{ success() && steps.fc.outputs.comment-id != null }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ✅ Code is now correctly formatted.

            <!-- thiscommentistofindthisformatcomment -->
          edit-mode: replace

  # Check for unnecessary dependencies.
  udeps:
    runs-on: ubuntu-latest
    env:
      MLIR_SYS_190_PREFIX: /usr/lib/llvm-19/
      LLVM_SYS_191_PREFIX: /usr/lib/llvm-19/
      TABLEGEN_190_PREFIX: /usr/lib/llvm-19/
      RUSTUP_TOOLCHAIN: nightly  # udeps needs nightly
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.80.0
        with:
          toolchain: nightly
          components: rustfmt

      - name: Add llvm deb repository
        uses: myci-actions/add-deb-repo@10
        with:
          repo: deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-19 main
          repo-name: llvm-repo
          keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key
      - name: Install LLVM
        run: sudo apt-get install llvm-19 llvm-19-dev llvm-19-runtime clang-19 clang-tools-19 lld-19 libpolly-19-dev libmlir-19-dev mlir-19-tools
      - name: Download and run cargo-udeps
        run: |
          wget -O - -c https://github.com/est31/cargo-udeps/releases/download/v0.1.45/cargo-udeps-v0.1.45-x86_64-unknown-linux-gnu.tar.gz | tar -xz
          cargo-udeps-*/cargo-udeps udeps --all-targets

  test:
    name: test (linux, amd64)
    runs-on: ubuntu-latest
    env:
      MLIR_SYS_190_PREFIX: /usr/lib/llvm-19/
      LLVM_SYS_191_PREFIX: /usr/lib/llvm-19/
      TABLEGEN_190_PREFIX: /usr/lib/llvm-19/
      RPC_ENDPOINT_TESTNET: ${{ secrets.RPC_ENDPOINT_TESTNET }}
      RPC_ENDPOINT_MAINNET: ${{ secrets.RPC_ENDPOINT_MAINNET }}
      RUST_LOG: debug,replay=trace,rpc-state-reader=trace
    steps:
      - uses: actions/checkout@v4
      - name: Free HDD space
        run: |
          echo "Listing 20 largest packages"
          dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 20
          df -h
          sudo apt-get update
          sudo apt-get remove -y '^llvm-.*'
          sudo apt-get remove -y 'php.*'
          sudo apt-get remove -y '^dotnet-.*'
          sudo apt-get remove -y '^temurin-.*'
          sudo apt-get remove -y azure-cli google-cloud-cli microsoft-edge-stable google-chrome-stable firefox powershell mono-devel
          sudo apt-get autoremove -y
          sudo apt-get clean
          df -h
          echo "Removing large directories"
          # deleting 15GB
          sudo rm -rf /usr/share/dotnet/
          sudo rm -rf /usr/local/lib/android
          df -h
      - name: Setup rust env
        uses: dtolnay/rust-toolchain@1.80.0
      - name: Retreive cached dependecies
        uses: Swatinem/rust-cache@v2
      - name: Add LLVM Debian repository
        uses: myci-actions/add-deb-repo@11
        with:
          repo: deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-19 main
          repo-name: llvm-repo
          keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key
      - run: sudo apt-get update && sudo apt-get upgrade -y
      - name: Install LLVM
        run: sudo apt-get install llvm-19 llvm-19-dev llvm-19-runtime clang-19 clang-tools-19 lld-19 libpolly-19-dev libmlir-19-dev mlir-19-tools
      - name: Checkout cairo_native
        uses: actions/checkout@v4
        with:
          repository: lambdaclass/cairo_native
          ref: 4355357697e9ab57ab88ae3a4282aac61455619e
          path: cairo_native
      - name: Build Cairo Native Runtime Library
        shell: bash
        run: |
          cd cairo_native
          make runtime
          echo "CAIRO_NATIVE_RUNTIME_LIBRARY=$(pwd)/libcairo_native_runtime.a" > $GITHUB_ENV
      - name: Test
        run: cargo test --all-features

  test_macos:
    name: Test (macOS, Apple silicon)
    runs-on: macos-14
    env:
      LIBRARY_PATH: /opt/homebrew/lib
      RPC_ENDPOINT_TESTNET: ${{ secrets.RPC_ENDPOINT_TESTNET }}
      RPC_ENDPOINT_MAINNET: ${{ secrets.RPC_ENDPOINT_MAINNET }}
      RUST_LOG: debug,replay=trace,rpc-state-reader=trace
    steps:
      - uses: actions/checkout@v4
      - name: Setup rust env
        uses: dtolnay/rust-toolchain@1.80.0
      - name: Rust `$PATH` workaround.
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - uses: Homebrew/actions/setup-homebrew@master
      - name: Retreive cached dependecies
        uses: Swatinem/rust-cache@v2
      - name: Install LLVM
        run: |
          brew install llvm@19 lld
          echo "LLVM_SYS_191_PREFIX=$(brew --prefix llvm@19)" >> $GITHUB_ENV
          echo "MLIR_SYS_190_PREFIX=$(brew --prefix llvm@19)" >> $GITHUB_ENV
          echo "TABLEGEN_190_PREFIX=$(brew --prefix llvm@19)" >> $GITHUB_ENV
      - name: Checkout cairo_native
        uses: actions/checkout@v4
        with:
          repository: lambdaclass/cairo_native
          ref: cfd0f062c09f309f7568f09ea2deea910aadc702
          path: cairo_native
      - name: Build Cairo Native Runtime Library
        run: |
          cd cairo_native
          make runtime
          echo "CAIRO_NATIVE_RUNTIME_LIBRARY=$(pwd)/libcairo_native_runtime.a" >> $GITHUB_ENV
      - name: Test
        run: cargo test --all-features -v
